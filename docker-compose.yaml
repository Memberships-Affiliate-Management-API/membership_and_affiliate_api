version: "3"
services:
  rabbit:
    image: rabbitmq:3-management
    container_name: 'memberships-rabbitmq'
    expose:
      - 5672
      - 15672
    ports:
      - 5672:5672
      - 15672:15672
    depends_on:
      - rabbit_networking
    networks:
      - rabbit_networking

  memcached:
    image: memcached:alpine3.14
    command: ["-m", "528"]
    container_name: 'memberships-memcached'
    expose:
      - 11211
    ports:
      - 11211:11211
    depends_on:
      - memcached_networking
    networks:
      - memcached_networking

  api:
    env_file:
      - .env.docker
    build:
      context: .
      dockerfile: Docker.API
    image: memberships-api:101
    container_name: 'memberships-api'
    command: "gunicorn --bind 0.0.0.0:8081 --workers 2 --threads 8 --timeout 0 run:app"
    restart: always
    expose:
      - 8081
    ports:
      - 8081:8081
    depends_on:
      - rabbit
      - memcached
      - rabbit_networking
      - front_end
      - memcached_networking
    networks:
      - rabbit_networking
      - front_end
      - memcached_networking

  system-admin:
    env_file:
      - .env.docker
    build:
      context: ../admin-portal-memberships-api/
      dockerfile: ../admin-portal-memberships-api/Dockerfile.ADMIN
    image: memberships-admin:102
    container_name: 'memberships-admin'
    command: "gunicorn --bind 0.0.0.0:8082 --workers 2 --threads 8 --timeout 0 run:app"
    restart: always
    expose:
      - 8082
    ports:
      - 8082:8082
    depends_on:
      - rabbit
      - api
      - memcached
      - rabbit_networking
      - front_end
      - memcached_networking
    networks:
      - rabbit_networking
      - front_end

  admin-tasks:
    build:
      context: ../admin-portal-memberships-api/
      dockerfile: ../admin-portal-memberships-api/Dockerfile.WORKER
    image: memberships-admin-worker:102
    container_name: 'memberships-admin-worker'
    command: "python tasks.py"
    restart: always
    depends_on:
      - rabbit
      - rabbit_networking
    networks:
      - rabbit_networking

  tasks:
    env_file:
      - .env.docker
    build:
      context: .
      dockerfile: Docker.TASKS
    image: memberships-tasks:101
    container_name: 'memberships-tasks'
    command: "gunicorn tasks:task_scheduler"
    restart: always
    depends_on:
      - rabbit
      - rabbit_networking
    networks:
      - rabbit_networking

  cron:
    env_file:
      - .env.docker
    build:
      context: .
      dockerfile: Docker.CRON
    image: memberships-cron-jobs:101
    container_name: 'memberships-cron'
    command: "gunicorn cron:cron_scheduler"
    restart: always
    depends_on:
      - rabbit
      - rabbit_networking
    networks:
      - rabbit_networking

networks:
  rabbit_networking:
    driver:  bridge
  memcached_networking:
    driver: bridge
  front_end:
    driver: bridge
